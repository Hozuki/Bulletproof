{"version":3,"sources":["danmaku/code/codedanmakuprovider.ts"],"names":["CodeDanmakuProvider","CodeDanmakuProvider.constructor","CodeDanmakuProvider.danmakuKind","CodeDanmakuProvider.dispose","CodeDanmakuProvider.addDanmaku","CodeDanmakuProvider.removeDanmaku","CodeDanmakuProvider.layoutManager","CodeDanmakuProvider.danmakuList"],"mappings":"AAAA;;GAEG;;;;;;AAEH,oCAAkC,wBAAwB,CAAC,CAAA;AAC3D,4BAA0B,gBAAgB,CAAC,CAAA;AAE3C,yCAAuC,4BAA4B,CAAC,CAAA;AACpE,oCAAkC,qDAAqD,CAAC,CAAA;AAExF,4BAA0B,eAAe,CAAC,CAAA;AAE1C;IAAyCA,uCAAmBA;IAExDA,6BAAYA,WAA8BA;QACtCC,kBAAMA,WAAWA,CAACA,CAACA;QACnBA,IAAIA,CAACA,cAAcA,GAAGA,IAAIA,mDAAwBA,CAACA,IAAIA,CAACA,CAACA;IAC7DA,CAACA;IAEDD,sBAAIA,4CAAWA;aAAfA;YACIE,MAAMA,CAACA,yBAAWA,CAACA,IAAIA,CAACA;QAC5BA,CAACA;;;OAAAF;IAEDA,qCAAOA,GAAPA;QACIG,IAAIA,CAACA,cAAcA,CAACA,OAAOA,EAAEA,CAACA;QAC9BA,IAAIA,CAACA,cAAcA,GAAGA,IAAIA,CAACA;QAC3BA,MAAMA,IAAIA,yCAAmBA,EAAEA,CAACA;IACpCA,CAACA;IAEDH,wCAAUA,GAAVA,UAAWA,OAAcA;QACrBI,IAAIA,WAAWA,GAAGA,IAAIA,CAACA,kBAAkBA,CAACA,WAAWA,CAACA;QACtDA,IAAIA,OAAOA,GAAGA,IAAIA,yBAAWA,CAACA,WAAWA,CAACA,KAAKA,EAAEA,WAAWA,CAACA,KAAKA,EAAEA,IAAIA,CAACA,aAAaA,CAACA,CAACA;QACxFA,6FAA6FA;QAC7FA,WAAWA,CAACA,KAAKA,CAACA,QAAQA,CAACA,OAAOA,CAACA,CAACA;QACpCA,OAAOA,CAACA,UAAUA,CAACA,OAAOA,EAAEA,WAAWA,CAACA,WAAWA,CAACA,CAACA;QACrDA,IAAIA,CAACA,WAAWA,CAACA,OAAOA,CAACA,OAAOA,CAACA,CAACA;QAClCA,MAAMA,CAACA,OAAOA,CAACA;IACnBA,CAACA;IAEDJ,2CAAaA,GAAbA,UAAcA,OAAmBA;QAC7BK,IAAIA,KAAKA,GAAGA,IAAIA,CAACA,WAAWA,CAACA,OAAOA,CAACA,OAAOA,CAACA,CAACA;QAC9CA,EAAEA,CAACA,CAACA,KAAKA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACZA,MAAMA,CAACA,KAAKA,CAACA;QACjBA,CAACA;QAACA,IAAIA,CAACA,CAACA;YACJA,IAAIA,WAAWA,GAAGA,IAAIA,CAACA,kBAAkBA,CAACA,WAAWA,CAACA;YACtDA,WAAWA,CAACA,KAAKA,CAACA,WAAWA,CAACA,OAAOA,CAACA,CAACA;YACvCA,IAAIA,CAACA,WAAWA,CAACA,MAAMA,CAACA,KAAKA,EAAEA,CAACA,CAACA,CAACA;YAClCA,OAAOA,CAACA,OAAOA,EAAEA,CAACA;YAClBA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;IACLA,CAACA;IAEDL,sBAAIA,8CAAaA;aAAjBA;YACIM,MAAMA,CAACA,IAAIA,CAACA,cAAcA,CAACA;QAC/BA,CAACA;;;OAAAN;IAEDA,sBAAIA,4CAAWA;aAAfA;YACIO,MAAMA,CAACA,IAAIA,CAACA,YAAYA,CAACA;QAC7BA,CAACA;;;OAAAP;IAOLA,0BAACA;AAADA,CArDA,AAqDCA,EArDwC,yCAAmB,EAqD3D;AArDY,2BAAmB,sBAqD/B,CAAA","file":"danmaku/code/CodeDanmakuProvider.js","sourcesContent":["/**\r\n * Created by MIC on 2015/12/28.\r\n */\r\n\r\nimport {DanmakuProviderBase} from \"../DanmakuProviderBase\";\r\nimport {DanmakuKind} from \"../DanmakuKind\";\r\nimport {DanmakuLayoutManagerBase} from \"../DanmakuLayoutManagerBase\";\r\nimport {CodeDanmakuLayoutManager} from \"./CodeDanmakuLayoutManager\";\r\nimport {NotImplementedError} from \"../../../lib/glantern/src/_util/NotImplementedError\";\r\nimport {DanmakuCoordinator} from \"../DanmakuCoordinator\";\r\nimport {CodeDanmaku} from \"./CodeDanmaku\";\r\n\r\nexport class CodeDanmakuProvider extends DanmakuProviderBase {\r\n\r\n    constructor(coordinator:DanmakuCoordinator) {\r\n        super(coordinator);\r\n        this._layoutManager = new CodeDanmakuLayoutManager(this);\r\n    }\r\n\r\n    get danmakuKind():DanmakuKind {\r\n        return DanmakuKind.Code;\r\n    }\r\n\r\n    dispose():void {\r\n        this._layoutManager.dispose();\r\n        this._layoutManager = null;\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    addDanmaku(content:string):CodeDanmaku {\r\n        var bulletproof = this.danmakuCoordinator.bulletproof;\r\n        var danmaku = new CodeDanmaku(bulletproof.stage, bulletproof.stage, this.layoutManager);\r\n        // Add to the last position of all currently active damakus to ensure being drawn as topmost.\r\n        bulletproof.stage.addChild(danmaku);\r\n        danmaku.initialize(content, bulletproof.timeElapsed);\r\n        this.danmakuList.unshift(danmaku);\r\n        return danmaku;\r\n    }\r\n\r\n    removeDanmaku(danmaku:CodeDanmaku):boolean {\r\n        var index = this.danmakuList.indexOf(danmaku);\r\n        if (index < 0) {\r\n            return false;\r\n        } else {\r\n            var bulletproof = this.danmakuCoordinator.bulletproof;\r\n            bulletproof.stage.removeChild(danmaku);\r\n            this.danmakuList.splice(index, 1);\r\n            danmaku.dispose();\r\n            return true;\r\n        }\r\n    }\r\n\r\n    get layoutManager():CodeDanmakuLayoutManager {\r\n        return this._layoutManager;\r\n    }\r\n\r\n    get danmakuList():CodeDanmaku[] {\r\n        return this._danmakuList;\r\n    }\r\n\r\n    // Writing in this pattern avoids force initialization of type-overridden members.\r\n    protected _danmakuList:CodeDanmaku[];\r\n    // Writing in this pattern avoids force initialization of type-overridden members.\r\n    protected _layoutManager:CodeDanmakuLayoutManager;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["danmaku/simple/simpledanmakuprovider.ts"],"names":["SimpleDanmakuProvider","SimpleDanmakuProvider.constructor","SimpleDanmakuProvider.danmakuKind","SimpleDanmakuProvider.initialize","SimpleDanmakuProvider.dispose","SimpleDanmakuProvider.canCreateDanmaku","SimpleDanmakuProvider.addDanmaku","SimpleDanmakuProvider.removeDanmaku","SimpleDanmakuProvider.updateDisplayDanmakuList","SimpleDanmakuProvider.isDanmakuDead","SimpleDanmakuProvider.layoutManager","SimpleDanmakuProvider.partialDanmakuCounts","SimpleDanmakuProvider.displayingDanmakuList","SimpleDanmakuProvider.fullDanmakuList","SimpleDanmakuProvider.partialDisplayingDanmakuCounts","SimpleDanmakuProvider.flags","SimpleDanmakuProvider.danmakuLayer","SimpleDanmakuProvider.update","SimpleDanmakuProvider.___addDanmaku"],"mappings":"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","file":"danmaku/simple/SimpleDanmakuProvider.js","sourcesContent":["/**\r\n * Created by MIC on 2015/12/28.\r\n */\r\n\r\nimport {DanmakuProviderBase} from \"../DanmakuProviderBase\";\r\nimport {DanmakuKind} from \"../DanmakuKind\";\r\nimport {DanmakuLayoutManagerBase} from \"../DanmakuLayoutManagerBase\";\r\nimport {SimpleDanmakuLayoutManager} from \"./SimpleDanmakuLayoutManager\";\r\nimport {NotImplementedError} from \"../../../lib/glantern/src/_util/NotImplementedError\";\r\nimport {DanmakuCoordinator} from \"../DanmakuCoordinator\";\r\nimport {SimpleDanmaku} from \"./SimpleDanmaku\";\r\nimport {DanmakuProviderFlag} from \"../DanmakuProviderFlag\";\r\nimport {SimpleDanmakuType} from \"./SimpleDanamkuType\";\r\nimport {ISimpleDanmakuCreateParams} from \"./ISimpleDanmakuCreateParams\";\r\nimport {SimpleDanmakuLayer} from \"./SimpleDanmakuLayer\";\r\nimport {SimpleDanmakuHelper} from \"./SimpleDanmakuHelper\";\r\nimport {StageResizedEventArgs} from \"../StageResizedEventArgs\";\r\nimport {_util} from \"../../../lib/glantern/src/_util/_util\";\r\nimport {IDanmaku} from \"../IDanmaku\";\r\n\r\n/**\r\n * An implementation of {@link DanmakuProviderBase}, for managing code damakus.\r\n */\r\nexport class SimpleDanmakuProvider extends DanmakuProviderBase {\r\n\r\n    constructor(coordinator:DanmakuCoordinator) {\r\n        super(coordinator);\r\n        this._layoutManager = new SimpleDanmakuLayoutManager(this);\r\n        // Mode: 0, 1, 2, 3, 4, 5, 6\r\n        this._partialDanmakuCounts = [0, 0, 0, 0, 0, 0, 0];\r\n        this._partialDisplayingDanmakuCounts = [0, 0, 0, 0, 0, 0, 0];\r\n        this._fullDanmakuList = [];\r\n    }\r\n\r\n    get danmakuKind():DanmakuKind {\r\n        return DanmakuKind.Simple;\r\n    }\r\n\r\n    initialize():void {\r\n        var stage = this.bulletproof.stage;\r\n        this._danmakuLayer = new SimpleDanmakuLayer(stage, stage, this);\r\n        stage.addChild(this.danmakuLayer);\r\n        this.layoutManager.onStageResize(this, new StageResizedEventArgs(stage.stageWidth, stage.stageHeight));\r\n    }\r\n\r\n    dispose():void {\r\n        this._danmakuLayer.parent.removeChild(this._danmakuLayer);\r\n        this._danmakuLayer.dispose();\r\n        this._danmakuLayer = null;\r\n        this._layoutManager.dispose();\r\n        this._layoutManager = null;\r\n        for (var i = 0; i < this.fullDanmakuList.length; ++i) {\r\n            for (var i = 0; i < this.fullDanmakuList.length; ++i) {\r\n                this.fullDanmakuList[i].dispose();\r\n            }\r\n        }\r\n        while (this.fullDanmakuList.length > 0) {\r\n            this.fullDanmakuList.pop();\r\n        }\r\n        while (this.displayingDanmakuList.length > 0) {\r\n            this.displayingDanmakuList.pop();\r\n        }\r\n        this._fullDanmakuList = null;\r\n        this._displayingDanmakuList = null;\r\n    }\r\n\r\n    canCreateDanmaku(args?:ISimpleDanmakuCreateParams):boolean {\r\n        var config = this.bulletproof.config;\r\n        var type:SimpleDanmakuType = _util.isUndefinedOrNull(args) ? config.defaultSimpleDanmakuCreateParams.type : args.type;\r\n        var count = this.partialDanmakuCounts[type];\r\n        return _util.isUndefined(count) ? false : count < config.simpleDanmakuPartCountThreshold;\r\n    }\r\n\r\n    addDanmaku(content:string, args?:ISimpleDanmakuCreateParams):IDanmaku {\r\n        return super.addDanmaku(content, args);\r\n    }\r\n\r\n    removeDanmaku(danmaku:SimpleDanmaku):boolean {\r\n        var index:number;\r\n        var b = false;\r\n        index = this.fullDanmakuList.indexOf(danmaku);\r\n        if (index >= 0) {\r\n            this.fullDanmakuList.splice(index, 1);\r\n            --this.partialDanmakuCounts[danmaku.createParams.type];\r\n            b = true;\r\n        }\r\n        index = this.displayingDanmakuList.indexOf(danmaku);\r\n        if (index >= 0) {\r\n            this.displayingDanmakuList.splice(index, 1);\r\n            --this.partialDisplayingDanmakuCounts[danmaku.createParams.type];\r\n        }\r\n        return b;\r\n    }\r\n\r\n    updateDisplayDanmakuList():void {\r\n        var partialDisplayingCounts = this.partialDisplayingDanmakuCounts;\r\n        var fullList = this.fullDanmakuList;\r\n        var displayingList = this.displayingDanmakuList;\r\n\r\n        // TODO: The algorithm can be optimized!\r\n        var timeElapsed = this.bulletproof.timeElapsed;\r\n        var config = this.bulletproof.config;\r\n        var danmaku:SimpleDanmaku;\r\n\r\n        // We don't handle the situation where cursor is at 00:20, and a danmaku born at 00:15 with life 10s is added.\r\n        // In this situation, the new danmaku is just ignored.\r\n\r\n        if (displayingList.length > 0) {\r\n            // Fortunately we have the displaying list for reference.\r\n            // *Assume* that we only play in normal order and don't seek through the track. So we just need to:\r\n            // 1) remove old danmakus in the front of the displaying list;\r\n            // 2) search the danmakus just next to the last in the displaying list.\r\n            var lastDisplayingDanmaku:SimpleDanmaku = null;\r\n            for (var i = 0; i < displayingList.length; ++i) {\r\n                danmaku = displayingList[i];\r\n                if (this.isDanmakuDead(danmaku)) {\r\n                    lastDisplayingDanmaku = danmaku;\r\n                    var type = danmaku.createParams.type;\r\n                    --partialDisplayingCounts[type];\r\n                    displayingList.splice(i, 1);\r\n                    --i;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n            // If we removed the last available danmaku in displaying list, we have to use the last removed one as reference.\r\n            var referenceDanmaku = displayingList.length > 0 ? displayingList[displayingList.length - 1] : lastDisplayingDanmaku;\r\n            // Skip danmakus in the front. Beware that the whole list may be skipped.\r\n            i = fullList.indexOf(referenceDanmaku) + 1;\r\n            if (i < fullList.length) {\r\n                for (; i < fullList.length; ++i) {\r\n                    danmaku = fullList[i];\r\n                    if (danmaku.bornTime > timeElapsed) {\r\n                        break;\r\n                    } else {\r\n                        var type = danmaku.createParams.type;\r\n                        if (partialDisplayingCounts[type] < config.simpleDanmakuPartCountThreshold) {\r\n                            displayingList.push(danmaku);\r\n                            ++partialDisplayingCounts[type];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            // If there is no displaying danmakus, we have to search a little more...\r\n            for (var i = 0; i < fullList.length; ++i) {\r\n                danmaku = fullList[i];\r\n                if (danmaku.bornTime > timeElapsed) {\r\n                    break;\r\n                }\r\n                if (!this.isDanmakuDead(danmaku)) {\r\n                    var type = danmaku.createParams.type;\r\n                    if (partialDisplayingCounts[type] < config.simpleDanmakuPartCountThreshold) {\r\n                        displayingList.push(fullList[i]);\r\n                        ++partialDisplayingCounts[type];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isDanmakuDead(danmaku:SimpleDanmaku):boolean {\r\n        var timeElapsed = this.bulletproof.timeElapsed;\r\n        return timeElapsed < danmaku.bornTime || danmaku.bornTime + danmaku.lifeTime * 1000 < timeElapsed;\r\n    }\r\n\r\n    get layoutManager():SimpleDanmakuLayoutManager {\r\n        return this._layoutManager;\r\n    }\r\n\r\n    get partialDanmakuCounts():number[] {\r\n        return this._partialDanmakuCounts;\r\n    }\r\n\r\n    get displayingDanmakuList():SimpleDanmaku[] {\r\n        return this._displayingDanmakuList;\r\n    }\r\n\r\n    get fullDanmakuList():SimpleDanmaku[] {\r\n        return this._fullDanmakuList;\r\n    }\r\n\r\n    get partialDisplayingDanmakuCounts():number[] {\r\n        return this._partialDisplayingDanmakuCounts;\r\n    }\r\n\r\n    get flags():DanmakuProviderFlag {\r\n        return DanmakuProviderFlag.None;\r\n    }\r\n\r\n    get danmakuLayer():SimpleDanmakuLayer {\r\n        return this._danmakuLayer;\r\n    }\r\n\r\n    update():void {\r\n        if (this._shouldSortDanmakuList) {\r\n            this.fullDanmakuList.sort((d1:SimpleDanmaku, d2:SimpleDanmaku):number => {\r\n                return d1.bornTime - d2.bornTime;\r\n            });\r\n            this._shouldSortDanmakuList = false;\r\n        }\r\n        super.update();\r\n    }\r\n\r\n    protected __addDanmaku(content:string, args?:ISimpleDanmakuCreateParams):SimpleDanmaku {\r\n        var config = this.bulletproof.config;\r\n        if (_util.isUndefinedOrNull(args)) {\r\n            args = SimpleDanmakuHelper.getDefaultParams(config);\r\n        } else {\r\n            SimpleDanmakuHelper.fillInCreateParams(config, args);\r\n        }\r\n        var danmaku = new SimpleDanmaku(this.layoutManager, args);\r\n        danmaku.initialize(content, this.bulletproof.timeElapsed);\r\n        this.fullDanmakuList.push(danmaku);\r\n        ++this.partialDanmakuCounts[args.type];\r\n        this._shouldSortDanmakuList = true;\r\n        return danmaku;\r\n    }\r\n\r\n    protected _danmakuLayer:SimpleDanmakuLayer;\r\n    protected _displayingDanmakuList:SimpleDanmaku[];\r\n    protected _layoutManager:SimpleDanmakuLayoutManager;\r\n    private _shouldSortDanmakuList:boolean = false;\r\n    private _fullDanmakuList:SimpleDanmaku[] = null;\r\n    private _partialDanmakuCounts:number[] = null;\r\n    private _partialDisplayingDanmakuCounts:number[] = null;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["danmaku/simple/simpledanmakulayoutmanager.ts"],"names":["SimpleDanmakuLayoutManager","SimpleDanmakuLayoutManager.constructor","SimpleDanmakuLayoutManager.dispose","SimpleDanmakuLayoutManager.performLayout","SimpleDanmakuLayoutManager.performLayout.isInPlayingRange","SimpleDanmakuLayoutManager.performLayout.handleFlying","SimpleDanmakuLayoutManager.performLayout.handleTop","SimpleDanmakuLayoutManager.performLayout.handleBottom","SimpleDanmakuLayoutManager.performLayout.handleTopLeft","SimpleDanmakuLayoutManager.performLayout.handleTopRight","SimpleDanmakuLayoutManager.performLayout.handleBottomLeft","SimpleDanmakuLayoutManager.performLayout.handleBottomRight","SimpleDanmakuLayoutManager.danmakuProvider","SimpleDanmakuLayoutManager.danmakuKind","SimpleDanmakuLayoutManager.onStageResize"],"mappings":"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","file":"danmaku/simple/SimpleDanmakuLayoutManager.js","sourcesContent":["/**\r\n * Created by MIC on 2015/12/28.\r\n */\r\n\r\nimport {DanmakuLayoutManagerBase} from \"../DanmakuLayoutManagerBase\";\r\nimport {SimpleDanmakuProvider} from \"./SimpleDanmakuProvider\";\r\nimport {DanmakuKind} from \"../DanmakuKind\";\r\nimport {NotImplementedError} from \"../../../lib/glantern/src/_util/NotImplementedError\";\r\nimport {Point} from \"../../../lib/glantern/src/flash/geom/Point\";\r\nimport {IDanmaku} from \"../IDanmaku\";\r\nimport {SimpleDanmaku} from \"./SimpleDanmaku\";\r\nimport {_util} from \"../../../lib/glantern/src/_util/_util\";\r\nimport {StageResizedEventArgs} from \"../StageResizedEventArgs\";\r\nimport {SimpleDanmakuType} from \"./SimpleDanamkuType\";\r\n\r\nexport class SimpleDanmakuLayoutManager extends DanmakuLayoutManagerBase {\r\n\r\n    constructor(provider:SimpleDanmakuProvider) {\r\n        super(provider);\r\n        this._danmakuProvider = provider;\r\n    }\r\n\r\n    dispose():void {\r\n    }\r\n\r\n    performLayout():void {\r\n        // Please notice that coordinates in this method are in <canvas> coordinate system, the same as Flash\r\n        // coordinate system.\r\n\r\n        var currentTime = this.bulletproof.timeElapsed;\r\n        var stage = this.bulletproof.stage;\r\n        var displayList = this.danmakuProvider.displayingDanmakuList;\r\n        var currentStates = {\r\n            bulletproof: this.bulletproof,\r\n            flying: {\r\n                nextYPosition: 0,\r\n                lowestYPosition: 0\r\n            }\r\n        };\r\n\r\n        function isInPlayingRange(danmaku:SimpleDanmaku):boolean {\r\n            return danmaku.bornTime <= currentTime && currentTime <= danmaku.bornTime + danmaku.lifeTime * 1000;\r\n        }\r\n\r\n        if (displayList.length > 0) {\r\n            for (var i = 0; i < displayList.length; ++i) {\r\n                var danmaku = displayList[i];\r\n                if (isInPlayingRange(danmaku)) {\r\n                    if (!danmaku.visible) {\r\n                        danmaku.visible = true;\r\n                    }\r\n                    switch (danmaku.createParams.type) {\r\n                        case SimpleDanmakuType.Flying:\r\n                            handleFlying(danmaku);\r\n                            break;\r\n                        case SimpleDanmakuType.Top:\r\n                            handleTop(danmaku);\r\n                            break;\r\n                        case SimpleDanmakuType.Bottom:\r\n                            handleBottom(danmaku);\r\n                            break;\r\n                        case SimpleDanmakuType.TopLeft:\r\n                            handleTopLeft(danmaku);\r\n                            break;\r\n                        case SimpleDanmakuType.TopRight:\r\n                            handleTopRight(danmaku);\r\n                            break;\r\n                        case SimpleDanmakuType.BottomLeft:\r\n                            handleBottomLeft(danmaku);\r\n                            break;\r\n                        case SimpleDanmakuType.BottomRight:\r\n                            handleBottomRight(danmaku);\r\n                            break;\r\n                        default:\r\n                            console.warn(\"What type is this?\");\r\n                            break;\r\n                    }\r\n                } else {\r\n                    // Don't draw danmakus which should not appear now.\r\n                    danmaku.visible = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        function handleFlying(danmaku:SimpleDanmaku):void {\r\n            var state = currentStates.flying;\r\n            // FIXME: HACK!\r\n            var isStageSizeUsable = false;\r\n            var stageWidth = isStageSizeUsable ? stage.width : currentStates.bulletproof.view.width;\r\n            var stageHeight = isStageSizeUsable ? stage.height : currentStates.bulletproof.view.height;\r\n            // T-0: At position (STAGE_WIDTH, Y)\r\n            // T-final: At position (-DANMAKU_WIDTH, Y)\r\n            // Add 5 extra pixels to ensure the danmaku is entirely out of the stage when its life should end.\r\n            var elapsedLifeRatio = (currentTime - danmaku.bornTime) / (danmaku.lifeTime * 1000);\r\n            danmaku.x = stageWidth - elapsedLifeRatio * (stageWidth + danmaku.textWidth + 5);\r\n            if (state.nextYPosition > stageHeight - danmaku.textHeight) {\r\n                state.nextYPosition = 0;\r\n            }\r\n            if (danmaku.isYPositionSet) {\r\n                if (danmaku.x < stageWidth - danmaku.textWidth) {\r\n                    if (danmaku.y <= state.nextYPosition) {\r\n                        state.nextYPosition = danmaku.y;\r\n                    }\r\n                } else {\r\n                    if (danmaku.y <= state.nextYPosition) {\r\n                        state.nextYPosition += danmaku.textHeight;\r\n                    }\r\n                }\r\n            } else {\r\n                if (state.lowestYPosition + danmaku.textHeight < stageHeight) {\r\n                    // Fully use the Y space. For example, a 14-pt and a 10-pt danmakus are added to the screen at\r\n                    // the same time, when there is a 12-pt available space, and the 10-pt danmaku should be placed\r\n                    // at bottom and the 14-pt danmaku should be placed at top.\r\n                    state.nextYPosition = state.lowestYPosition;\r\n                }\r\n                danmaku.y = state.nextYPosition;\r\n                state.nextYPosition += danmaku.textHeight;\r\n                danmaku.isYPositionSet = true;\r\n            }\r\n            if (state.lowestYPosition < danmaku.y + danmaku.textHeight) {\r\n                state.lowestYPosition = danmaku.y + danmaku.textHeight;\r\n            }\r\n        }\r\n\r\n        function handleTop(danmaku:SimpleDanmaku):void {\r\n\r\n        }\r\n\r\n        function handleBottom(danmaku:SimpleDanmaku):void {\r\n\r\n        }\r\n\r\n        function handleTopLeft(danmaku:SimpleDanmaku):void {\r\n\r\n        }\r\n\r\n        function handleTopRight(danmaku:SimpleDanmaku):void {\r\n\r\n        }\r\n\r\n        function handleBottomLeft(danmaku:SimpleDanmaku):void {\r\n\r\n        }\r\n\r\n        function handleBottomRight(danmaku:SimpleDanmaku):void {\r\n\r\n        }\r\n    }\r\n\r\n    get danmakuProvider():SimpleDanmakuProvider {\r\n        return this._danmakuProvider;\r\n    }\r\n\r\n    get danmakuKind():DanmakuKind {\r\n        return DanmakuKind.Simple;\r\n    }\r\n\r\n    onStageResize(sender:any, e:StageResizedEventArgs):void {\r\n        this._stageWidth = e.width;\r\n        this._stageHeight = e.height;\r\n    }\r\n\r\n    protected _danmakuProvider:SimpleDanmakuProvider;\r\n    private _stageWidth:number = 0;\r\n    private _stageHeight:number = 0;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}
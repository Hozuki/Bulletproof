{"version":3,"sources":["danmaku/simple/simpledanmakulayoutmanager.ts"],"names":["SimpleDanmakuLayoutManager","SimpleDanmakuLayoutManager.constructor","SimpleDanmakuLayoutManager.dispose","SimpleDanmakuLayoutManager.performLayout","SimpleDanmakuLayoutManager.performLayout.isInPlayingRange","SimpleDanmakuLayoutManager.performLayout.positionFlying","SimpleDanmakuLayoutManager.performLayout.handleFlyingOverflow","SimpleDanmakuLayoutManager.performLayout.positionTop","SimpleDanmakuLayoutManager.performLayout.positionBottom","SimpleDanmakuLayoutManager.performLayout.positionTopLeft","SimpleDanmakuLayoutManager.performLayout.positionTopRight","SimpleDanmakuLayoutManager.performLayout.positionBottomLeft","SimpleDanmakuLayoutManager.performLayout.positionBottomRight","SimpleDanmakuLayoutManager.danmakuProvider","SimpleDanmakuLayoutManager.danmakuKind","SimpleDanmakuLayoutManager.onStageResize"],"mappings":"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","file":"danmaku/simple/SimpleDanmakuLayoutManager.js","sourcesContent":["/**\r\n * Created by MIC on 2015/12/28.\r\n */\r\n\r\nimport {DanmakuLayoutManagerBase} from \"../DanmakuLayoutManagerBase\";\r\nimport {SimpleDanmakuProvider} from \"./SimpleDanmakuProvider\";\r\nimport {DanmakuKind} from \"../DanmakuKind\";\r\nimport {NotImplementedError} from \"../../../lib/glantern/src/_util/NotImplementedError\";\r\nimport {Point} from \"../../../lib/glantern/src/flash/geom/Point\";\r\nimport {IDanmaku} from \"../IDanmaku\";\r\nimport {SimpleDanmaku} from \"./SimpleDanmaku\";\r\nimport {_util} from \"../../../lib/glantern/src/_util/_util\";\r\nimport {StageResizedEventArgs} from \"../StageResizedEventArgs\";\r\nimport {SimpleDanmakuType} from \"./SimpleDanamkuType\";\r\n\r\nexport class SimpleDanmakuLayoutManager extends DanmakuLayoutManagerBase {\r\n\r\n    constructor(provider:SimpleDanmakuProvider) {\r\n        super(provider);\r\n        this._danmakuProvider = provider;\r\n    }\r\n\r\n    dispose():void {\r\n    }\r\n\r\n    performLayout():void {\r\n        // Please notice that coordinates in this method are in <canvas> coordinate system, the same as Flash\r\n        // coordinate system.\r\n\r\n        var currentTime = this.bulletproof.timeElapsed;\r\n        var stage = this.bulletproof.stage;\r\n        var displayingList = this.danmakuProvider.displayingDanmakuList;\r\n\r\n        function isInPlayingRange(danmaku:SimpleDanmaku):boolean {\r\n            return danmaku.bornTime <= currentTime && currentTime <= danmaku.bornTime + danmaku.lifeTime * 1000;\r\n        }\r\n\r\n        if (displayingList.length > 0) {\r\n            for (var i = 0; i < displayingList.length; ++i) {\r\n                var danmaku = displayingList[i];\r\n                if (isInPlayingRange(danmaku)) {\r\n                    if (!danmaku.visible) {\r\n                        danmaku.visible = true;\r\n                    }\r\n                    switch (danmaku.createParams.type) {\r\n                        case SimpleDanmakuType.FlyingR2L:\r\n                            positionFlying(danmaku);\r\n                            break;\r\n                        case SimpleDanmakuType.Top:\r\n                            positionTop(danmaku);\r\n                            break;\r\n                        case SimpleDanmakuType.Bottom:\r\n                            positionBottom(danmaku);\r\n                            break;\r\n                        case SimpleDanmakuType.TopLeft:\r\n                            positionTopLeft(danmaku);\r\n                            break;\r\n                        case SimpleDanmakuType.TopRight:\r\n                            positionTopRight(danmaku);\r\n                            break;\r\n                        case SimpleDanmakuType.BottomLeft:\r\n                            positionBottomLeft(danmaku);\r\n                            break;\r\n                        case SimpleDanmakuType.BottomRight:\r\n                            positionBottomRight(danmaku);\r\n                            break;\r\n                        default:\r\n                            console.warn(\"What type is this?\");\r\n                            break;\r\n                    }\r\n                } else {\r\n                    // Don't draw danmakus which should not appear now.\r\n                    danmaku.visible = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        function positionFlying(danmaku:SimpleDanmaku):void {\r\n            var stageWidth = stage.stageWidth;\r\n            var stageHeight = stage.stageHeight;\r\n            // T_0: At position (STAGE_WIDTH, Y)\r\n            // T_final: At position (-DANMAKU_WIDTH, Y)\r\n            // Add 5 extra pixels to ensure the danmaku is entirely out of the stage when its life should end.\r\n            var elapsedLifeRatio = (currentTime - danmaku.bornTime) / (danmaku.lifeTime * 1000);\r\n            danmaku.x = stageWidth - elapsedLifeRatio * (stageWidth + danmaku.textWidth + 5);\r\n            if (!danmaku.yPositionSet) {\r\n                if (displayingList.length > 0) {\r\n                    var currentY = 0;\r\n                    var bottommostThereIs = 0;\r\n                    for (var i = 0; i < displayingList.length; ++i) {\r\n                        if (displayingList[i].createParams.type === SimpleDanmakuType.FlyingR2L && displayingList[i].yPositionSet) {\r\n                            // Bottom of current displaying danmaku which is being scanned\r\n                            var currentDDBottom = displayingList[i].y + displayingList[i].textHeight;\r\n                            // Estimated value of the bottom of the danmaku being positioned\r\n                            var estimatedCDPBottom = currentY + danmaku.textHeight;\r\n                            // The danmaku being scanned has (just) left the right edge of the stage.\r\n                            if (displayingList[i].x < stageWidth - displayingList[i].textWidth) {\r\n                                // The danmaku being scanned \"embraces\" the danmaku being positioned.\r\n                                if (displayingList[i].y <= currentY && estimatedCDPBottom <= currentDDBottom) {\r\n                                    currentY = displayingList[i].y;\r\n                                }\r\n                            } else {\r\n                                // The danmaku being scanned \"crashes\" with the danmaku being positioned.\r\n                                if (displayingList[i].y <= estimatedCDPBottom || currentDDBottom <= currentY) {\r\n                                    currentY = currentDDBottom;\r\n                                }\r\n                            }\r\n                            if (currentY > stageHeight - danmaku.textHeight) {\r\n                                // Wrapping in a function is used for the optimizers to detect that variable 'i' is not\r\n                                // modified in the whole array accessing procedure. Sure it can be expanded into normal\r\n                                // form, but I think it will slightly affect performance.\r\n                                currentY = handleFlyingOverflow(displayingList, i);\r\n                                if (currentY > stageHeight - danmaku.textHeight) {\r\n                                    currentY = 0;\r\n                                }\r\n                                break;\r\n                            }\r\n                            if (currentDDBottom > bottommostThereIs) {\r\n                                bottommostThereIs = currentDDBottom;\r\n                            }\r\n                        }\r\n                    }\r\n                    // If the space in the bottom is enough, we do not have to care about the complicated layout algorithm.\r\n                    if (bottommostThereIs <= stageHeight - danmaku.textHeight) {\r\n                        danmaku.y = bottommostThereIs;\r\n                    } else {\r\n                        danmaku.y = currentY;\r\n                    }\r\n                } else {\r\n                    danmaku.y = 0;\r\n                }\r\n                danmaku.yPositionSet = true;\r\n            }\r\n        }\r\n\r\n        function handleFlyingOverflow(displayingList:SimpleDanmaku[], currentIndex:number):number {\r\n            // The stage is full of flying danmakus. Now follow the last positioned danmaku.\r\n            // If overflow happens again, reset Y position to the top of the stage.\r\n            // newY will definitely be assigned.\r\n            var newY:number;\r\n            do {\r\n                if (displayingList[currentIndex].createParams.type === SimpleDanmakuType.FlyingR2L && displayingList[currentIndex].yPositionSet) {\r\n                    newY = displayingList[currentIndex].y + displayingList[currentIndex].textHeight;\r\n                }\r\n                ++currentIndex;\r\n            } while (currentIndex < displayingList.length);\r\n            return newY;\r\n        }\r\n\r\n        function positionTop(danmaku:SimpleDanmaku):void {\r\n\r\n        }\r\n\r\n        function positionBottom(danmaku:SimpleDanmaku):void {\r\n\r\n        }\r\n\r\n        function positionTopLeft(danmaku:SimpleDanmaku):void {\r\n\r\n        }\r\n\r\n        function positionTopRight(danmaku:SimpleDanmaku):void {\r\n\r\n        }\r\n\r\n        function positionBottomLeft(danmaku:SimpleDanmaku):void {\r\n\r\n        }\r\n\r\n        function positionBottomRight(danmaku:SimpleDanmaku):void {\r\n\r\n        }\r\n    }\r\n\r\n    get danmakuProvider():SimpleDanmakuProvider {\r\n        return this._danmakuProvider;\r\n    }\r\n\r\n    get danmakuKind():DanmakuKind {\r\n        return DanmakuKind.Simple;\r\n    }\r\n\r\n    onStageResize(sender:any, e:StageResizedEventArgs):void {\r\n        this._stageWidth = e.width;\r\n        this._stageHeight = e.height;\r\n    }\r\n\r\n    protected _danmakuProvider:SimpleDanmakuProvider;\r\n    private _stageWidth:number = 0;\r\n    private _stageHeight:number = 0;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}
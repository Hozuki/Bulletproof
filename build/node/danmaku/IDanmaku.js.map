{"version":3,"sources":["danmaku/idanmaku.ts"],"names":[],"mappings":"AAAA;;GAEG","file":"danmaku/IDanmaku.js","sourcesContent":["/**\r\n * Created by MIC on 2016/2/2.\r\n */\r\n\r\nimport {Bulletproof} from \"../Bulletproof\";\r\nimport {DanmakuKind} from \"./DanmakuKind\";\r\nimport {DanmakuLayoutManagerBase} from \"./DanmakuLayoutManagerBase\";\r\nimport {DanmakuProviderBase} from \"./DanmakuProviderBase\";\r\nimport {CommentData} from \"../bilibili/danmaku_api/CommentData\";\r\nimport {IDisposable} from \"../../lib/glantern/src/glantern/IDisposable\";\r\n\r\nexport interface IDanmaku extends IDisposable {\r\n\r\n    /**\r\n     * Returns the content used to create this danmaku.\r\n     * This method must be overridden.\r\n     * @returns {String}\r\n     */\r\n    getContent():string;\r\n    /**\r\n     * Returns the displaying text of this danmaku. Could be empty.\r\n     * This method must be overridden.\r\n     * @returns {String}\r\n     */\r\n    getText():string;\r\n    /**\r\n     * Initialize this instance.\r\n     * This method must be overridden.\r\n     * @param content {String} The content used to create this danmaku.\r\n     * @param time {Number} Current elapsed time, in milliseconds.\r\n     */\r\n    initialize(content:string, time:number):void;\r\n    /**\r\n     * Gets the Bulletproof instance that manages the danmaku.\r\n     * @type {Bulletproof}\r\n     */\r\n    bulletproof:Bulletproof;\r\n    /**\r\n     * Gets the kind of this instance.\r\n     * This property must be overridden.\r\n     * @type {DanmakuKind}\r\n     */\r\n    danmakuKind:DanmakuKind;\r\n    /**\r\n     * Gets the born time of this instance, in milliseconds.\r\n     * @type {Number}\r\n     */\r\n    bornTime:number;\r\n    /**\r\n     * Gets the life time of this instance, in seconds. The default value is\r\n     * {@link BulletproofConfig.simpleDanmakuLifeTimeSecs}. This property can be overridden to apply different life time\r\n     * management strategies.\r\n     * @type {Number}\r\n     */\r\n    lifeTime:number;\r\n    /**\r\n     * Gets the danmaku layout manager specified at the time of creation.\r\n     * @type {DanmakuLayoutManagerBase}\r\n     */\r\n    layoutManager:DanmakuLayoutManagerBase;\r\n    /**\r\n     * Gets the danmaku provider of the danmaku layout manager specified at the time of creation.\r\n     * @type {DanmakuProviderBase}\r\n     */\r\n    danmakuProvider:DanmakuProviderBase;\r\n    /**\r\n     * Gets/sets whether the danmaku is visible.\r\n     * @type {Boolean}\r\n     */\r\n    visible:boolean;\r\n    /**\r\n     * Generates and returns the information of this danmaku in {@link CommentData} format.\r\n     * @returns {CommentData}\r\n     */\r\n    getCommentData():CommentData;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}
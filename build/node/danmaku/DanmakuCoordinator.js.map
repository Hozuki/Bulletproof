{"version":3,"sources":["danmaku/danmakucoordinator.ts"],"names":["DanmakuCoordinator","DanmakuCoordinator.constructor","DanmakuCoordinator.dispose","DanmakuCoordinator.shouldCreateDanmaku","DanmakuCoordinator.addDanmakuProvider","DanmakuCoordinator.removeDanmakuProvider","DanmakuCoordinator.getDanmakuProvider","DanmakuCoordinator.update","DanmakuCoordinator.render","DanmakuCoordinator.bulletproof"],"mappings":"AAAA;;GAEG;AAGH,oCAAkC,kDAAkD,CAAC,CAAA;AACrF,sBAAoB,oCAAoC,CAAC,CAAA;AAQzD;IAEIA,4BAAYA,WAAuBA;QA8C3BC,sBAAiBA,GAAyCA,IAAIA,CAACA;QAC/DA,iBAAYA,GAAeA,IAAIA,CAACA;QA9CpCA,IAAIA,CAACA,YAAYA,GAAGA,WAAWA,CAACA;QAChCA,IAAIA,CAACA,iBAAiBA,GAAGA,IAAIA,GAAGA,EAAoCA,CAACA;IACzEA,CAACA;IAEDD,oCAAOA,GAAPA;QACIE,IAAIA,CAACA,iBAAiBA,CAACA,OAAOA,CAACA,UAACA,QAA4BA;YACxDA,QAAQA,CAACA,OAAOA,EAAEA,CAACA;QACvBA,CAACA,CAACA,CAACA;QACHA,IAAIA,CAACA,iBAAiBA,CAACA,KAAKA,EAAEA,CAACA;IACnCA,CAACA;IAEDF,gDAAmBA,GAAnBA;QACIG,MAAMA,IAAIA,yCAAmBA,EAAEA,CAACA;IACpCA,CAACA;IAEDH,+CAAkBA,GAAlBA,UAAmBA,QAA4BA;QAC3CI,EAAEA,CAACA,CAACA,CAACA,aAAKA,CAACA,iBAAiBA,CAACA,QAAQA,CAACA,IAAIA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,GAAGA,CAACA,QAAQA,CAACA,WAAWA,CAACA,CAACA,CAACA,CAACA;YAC1FA,IAAIA,CAACA,iBAAiBA,CAACA,GAAGA,CAACA,QAAQA,CAACA,WAAWA,EAAEA,QAAQA,CAACA,CAACA;QAC/DA,CAACA;IACLA,CAACA;IAEDJ,kDAAqBA,GAArBA,UAAsBA,QAA4BA;QAC9CK,EAAEA,CAACA,CAACA,CAACA,aAAKA,CAACA,iBAAiBA,CAACA,QAAQA,CAACA,IAAIA,IAAIA,CAACA,iBAAiBA,CAACA,GAAGA,CAACA,QAAQA,CAACA,WAAWA,CAACA,CAACA,CAACA,CAACA;YACzFA,IAAIA,CAACA,iBAAiBA,CAACA,MAAMA,CAACA,QAAQA,CAACA,WAAWA,CAACA,CAACA;QACxDA,CAACA;IACLA,CAACA;IAEDL,+CAAkBA,GAAlBA,UAAmBA,IAAgBA;QAC/BM,MAAMA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,GAAGA,CAACA,IAAIA,CAACA,CAACA;IAC5CA,CAACA;IAEDN,mCAAMA,GAANA;QACIO,IAAIA,CAACA,iBAAiBA,CAACA,OAAOA,CAACA,UAACA,QAA4BA;YACxDA,QAAQA,CAACA,MAAMA,EAAEA,CAACA;QACtBA,CAACA,CAACA,CAACA;IACPA,CAACA;IAEDP,mCAAMA,GAANA,UAAOA,QAAsBA;QACzBQ,cAAcA;IAClBA,CAACA;IAEDR,sBAAIA,2CAAWA;aAAfA;YACIS,MAAMA,CAACA,IAAIA,CAACA,YAAYA,CAACA;QAC7BA,CAACA;;;OAAAT;IAKLA,yBAACA;AAADA,CAnDA,AAmDCA,IAAA;AAnDY,0BAAkB,qBAmD9B,CAAA","file":"danmaku/DanmakuCoordinator.js","sourcesContent":["/**\r\n * Created by MIC on 2015/12/29.\r\n */\r\n\r\nimport {IDisposable} from \"../../lib/glantern/src/IDisposable\";\r\nimport {NotImplementedError} from \"../../lib/glantern/src/_util/NotImplementedError\";\r\nimport {_util} from \"../../lib/glantern/src/_util/_util\";\r\nimport {DanmakuKind} from \"./DanmakuKind\";\r\nimport {DanmakuProviderBase} from \"./DanmakuProviderBase\";\r\nimport {Bulletproof} from \"../Bulletproof\";\r\nimport {IWebGLElement} from \"../../lib/glantern/src/webgl/IWebGLElement\";\r\nimport {WebGLRenderer} from \"../../lib/glantern/src/webgl/WebGLRenderer\";\r\nimport {DanmakuBase} from \"./DanmakuBase\";\r\n\r\nexport class DanmakuCoordinator implements IWebGLElement {\r\n\r\n    constructor(bulletproof:Bulletproof) {\r\n        this._bulletproof = bulletproof;\r\n        this._danmakuProviders = new Map<DanmakuKind, DanmakuProviderBase>();\r\n    }\r\n\r\n    dispose():void {\r\n        this._danmakuProviders.forEach((provider:DanmakuProviderBase):void => {\r\n            provider.dispose();\r\n        });\r\n        this._danmakuProviders.clear();\r\n    }\r\n\r\n    shouldCreateDanmaku():boolean {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    addDanmakuProvider(provider:DanmakuProviderBase):void {\r\n        if (!_util.isUndefinedOrNull(provider) && !this._danmakuProviders.has(provider.danmakuKind)) {\r\n            this._danmakuProviders.set(provider.danmakuKind, provider);\r\n        }\r\n    }\r\n\r\n    removeDanmakuProvider(provider:DanmakuProviderBase):void {\r\n        if (!_util.isUndefinedOrNull(provider) && this._danmakuProviders.has(provider.danmakuKind)) {\r\n            this._danmakuProviders.delete(provider.danmakuKind);\r\n        }\r\n    }\r\n\r\n    getDanmakuProvider(kind:DanmakuKind):DanmakuProviderBase {\r\n        return this._danmakuProviders.get(kind);\r\n    }\r\n\r\n    update():void {\r\n        this._danmakuProviders.forEach((provider:DanmakuProviderBase):void => {\r\n            provider.update();\r\n        });\r\n    }\r\n\r\n    render(renderer:WebGLRenderer):void {\r\n        // Do nothing.\r\n    }\r\n\r\n    get bulletproof():Bulletproof {\r\n        return this._bulletproof;\r\n    }\r\n\r\n    private _danmakuProviders:Map<DanmakuKind, DanmakuProviderBase> = null;\r\n    private _bulletproof:Bulletproof = null;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}
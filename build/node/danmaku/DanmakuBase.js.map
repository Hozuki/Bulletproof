{"version":3,"sources":["danmaku/danmakubase.ts"],"names":["DanmakuBase","DanmakuBase.constructor","DanmakuBase.danmakuKind","DanmakuBase.bornTime","DanmakuBase.lifeTime","DanmakuBase.layoutManager","DanmakuBase.danmakuProvider"],"mappings":"AAAA;;GAEG;;;;;;AAEH,uCAAqC,6DAA6D,CAAC,CAAA;AAInG,oCAAkC,kDAAkD,CAAC,CAAA;AACrF,4BAA0B,gBAAgB,CAAC,CAAA;AAG3C;;;GAGG;AACH;IAA0CA,+BAAsBA;IAE5DA;;;;;OAKGA;IACHA,qBAAYA,IAAUA,EAAEA,MAA6BA,EAAEA,aAAsCA;QACzFC,kBAAMA,IAAIA,EAAEA,MAAMA,CAACA,CAACA;QAoEdA,cAASA,GAAUA,CAACA,CAACA;QACrBA,mBAAcA,GAA4BA,IAAIA,CAACA;QAC/CA,qBAAgBA,GAAuBA,IAAIA,CAACA;QArElDA,IAAIA,CAACA,cAAcA,GAAGA,aAAaA,CAACA;QACpCA,IAAIA,CAACA,gBAAgBA,GAAGA,aAAaA,CAACA,eAAeA,CAACA;QACtDA,IAAIA,CAACA,SAASA,GAAGA,aAAaA,CAACA,eAAeA,CAACA,kBAAkBA,CAACA,WAAWA,CAACA,WAAWA,CAACA;IAC9FA,CAACA;IA0BDD,sBAAIA,oCAAWA;QAJfA;;;WAGGA;aACHA;YACIE,MAAMA,IAAIA,yCAAmBA,EAAEA,CAACA;QACpCA,CAACA;;;OAAAF;IAMDA,sBAAIA,iCAAQA;QAJZA;;;WAGGA;aACHA;YACIG,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA;QAC1BA,CAACA;;;OAAAH;IAQDA,sBAAIA,iCAAQA;QANZA;;;;;WAKGA;aACHA;YACII,MAAMA,CAACA,yBAAWA,CAACA,wBAAwBA,CAACA;QAChDA,CAACA;;;OAAAJ;IAMDA,sBAAIA,sCAAaA;QAJjBA;;;WAGGA;aACHA;YACIK,MAAMA,CAACA,IAAIA,CAACA,cAAcA,CAACA;QAC/BA,CAACA;;;OAAAL;IAMDA,sBAAIA,wCAAeA;QAJnBA;;;WAGGA;aACHA;YACIM,MAAMA,CAACA,IAAIA,CAACA,gBAAgBA,CAACA;QACjCA,CAACA;;;OAAAN;IAMLA,kBAACA;AAADA,CAjFA,AAiFCA,EAjFyC,+CAAsB,EAiF/D;AAjFqB,mBAAW,cAiFhC,CAAA","file":"danmaku/DanmakuBase.js","sourcesContent":["/**\r\n * Created by MIC on 2015/12/28.\r\n */\r\n\r\nimport {DisplayObjectContainer} from \"../../lib/glantern/src/flash/display/DisplayObjectContainer\";\r\nimport {DanmakuKind} from \"./DanmakuKind\";\r\nimport {DanmakuLayoutManagerBase} from \"./DanmakuLayoutManagerBase\";\r\nimport {Stage} from \"../../lib/glantern/src/flash/display/Stage\";\r\nimport {NotImplementedError} from \"../../lib/glantern/src/_util/NotImplementedError\";\r\nimport {Bulletproof} from \"../Bulletproof\";\r\nimport {DanmakuProviderBase} from \"./DanmakuProviderBase\";\r\n\r\n/**\r\n * Base class exposing common service of a danmaku.\r\n * This class must be inherited.\r\n */\r\nexport abstract class DanmakuBase extends DisplayObjectContainer {\r\n\r\n    /**\r\n     * Creates a new danmaku.\r\n     * @param root {Stage}\r\n     * @param parent {DisplayObjectContainer}\r\n     * @param layoutManager {DanmakuLayoutManagerBase} The layout manager that will be used for reversed queries.\r\n     */\r\n    constructor(root:Stage, parent:DisplayObjectContainer, layoutManager:DanmakuLayoutManagerBase) {\r\n        super(root, parent);\r\n        this._layoutManager = layoutManager;\r\n        this._danmakuProvider = layoutManager.danmakuProvider;\r\n        this._bornTime = layoutManager.danmakuProvider.danmakuCoordinator.bulletproof.timeElapsed;\r\n    }\r\n\r\n    /**\r\n     * Returns the content used to create this danmaku.\r\n     * This method must be overridden.\r\n     */\r\n    abstract getContent():string;\r\n\r\n    /**\r\n     * Returns the displaying text of this danmaku. Could be empty.\r\n     * This method must be overridden.\r\n     */\r\n    abstract getText():string;\r\n\r\n    /**\r\n     * Initialize this instance.\r\n     * This method must be overridden.\r\n     * @param content {String} The content used to create this danmaku.\r\n     * @param time {Number} Current elapsed time, in milliseconds.\r\n     */\r\n    abstract initialize(content:string, time:number):void;\r\n\r\n    /**\r\n     * Gets the kind of this instance.\r\n     * This property must be overridden.\r\n     */\r\n    get danmakuKind():DanmakuKind {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    /**\r\n     * Gets the born time of this instance, in milliseconds.\r\n     * @returns {Number}\r\n     */\r\n    get bornTime():number {\r\n        return this._bornTime;\r\n    }\r\n\r\n    /**\r\n     * Gets the life time of this instance, in seconds. The default value is\r\n     * {@link Bulletproof.SIMPLE_DANMAKU_LIFE_TIME}. This property can be overridden to apply different life time\r\n     * life time management strategies.\r\n     * @returns {Number}\r\n     */\r\n    get lifeTime():number {\r\n        return Bulletproof.SIMPLE_DANMAKU_LIFE_TIME;\r\n    }\r\n\r\n    /**\r\n     * Gets the danmaku layout manager specified at the time of creation.\r\n     * @returns {DanmakuLayoutManagerBase}\r\n     */\r\n    get layoutManager():DanmakuLayoutManagerBase {\r\n        return this._layoutManager;\r\n    }\r\n\r\n    /**\r\n     * Gets the danmaku provider of the danmaku layout manager specified at the time of creation.\r\n     * @returns {DanmakuProviderBase}\r\n     */\r\n    get danmakuProvider():DanmakuProviderBase {\r\n        return this._danmakuProvider;\r\n    }\r\n\r\n    protected _bornTime:number = 0;\r\n    protected _layoutManager:DanmakuLayoutManagerBase = null;\r\n    protected _danmakuProvider:DanmakuProviderBase = null;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}